#!/bin/bash

set -e

prog=$(basename $0)

### config ###########################################################

package=gperftools
version=2.2.1

prefix=$HOME/local
packagedir=$HOME/sources/packages
srcdir=$HOME/sources/thirdparty
builddir=$HOME/build/thirdparty

installdir=$prefix/stow
libdir=$prefix/lib
includedir=$prefix/include
infodir=$prefix/share/info

pkgsrcdir=$srcdir/$package-$version
pkgbuilddir=$builddir/$package-$version
pkginstalldir=$installdir/$package-$version

file=$package-$version.tar.gz
baseurl=https://googledrive.com/host/0B6NtGsLhIcf7MWxMMF9JdTN3UVk
url=$baseurl/$file

dependencies=(libunwind-0.99-beta)
config=(
    --prefix $pkginstalldir)
env=(
    CPPFLAGS=-I$includedir
    LDFLAGS="-L$libdir -Wl,-rpath=$libdir")

### help #############################################################

do_help() {
    echo "\
$prog [deps|source|configure|build|stage|install
      |unconfigure|unstage|uninstall
      ].."
    exit
}

### deps #############################################################

do_deps() {
    for dependency in "${dependencies[@]}" ; do
        $packagedir/$dependency install
    done
}

### source ###########################################################

do_source() {
    cd $srcdir

    wget --no-check-certificate -O $file $url

    tar zxf $file
}

### configure ########################################################

do_configure() {
    [ -f $pkgsrcdir/configure ] || do_source

    mkdir -p $pkgbuilddir

    cd $pkgbuilddir

    $pkgsrcdir/configure "${config[@]}" "${env[@]}"
}

### build ############################################################

do_build() {
    [ -f $pkgbuilddir/Makefile ] || do_configure

    cd $pkgbuilddir

    make "${env[@]}"
}

### stage ############################################################

do_stage() {
    [ -f $pkgbuilddir/Makefile ] || do_build

    mkdir -p $installdir

    cd $pkgbuilddir

    make install "${env[@]}"
}

### install ##########################################################

do_install() {
    [ -d $pkginstalldir ] || do_stage

    rm -f $infodir/dir

    cd $installdir

    stow $package-$version
}

### unconfigure ######################################################

do_unconfigure() {
    rm -rf $pkgbuilddir
}

### unstage ##########################################################

do_unstage() {
    if [ -d $pkginstalldir ] ; then
        do_uninstall

        rm -rf $pkginstalldir
    fi
}

### uninstall ########################################################

do_uninstall() {
    cd $installdir

    stow -D $package-$version
}

### main #############################################################

[ $# -gt 0 ] || do_help

while [ $# -gt 0 ] ; do
    arg="$1"
    shift

    case $arg in
        'deps')        do_deps        ;;
        'source')      do_source      ;;
        'configure')   do_configure   ;;
        'build')       do_build       ;;
        'stage')       do_stage       ;;
        'install')     do_install     ;;
        'unconfigure') do_unconfigure ;;
        'unstage')     do_unstage     ;;
        'uninstall')   do_uninstall   ;;
        *)             do_help        ;;
    esac
done
